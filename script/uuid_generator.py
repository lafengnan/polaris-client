#!/usr/bin/env python
# coding=utf-8

import base64, hashlib
from uuid import uuid5, NAMESPACE_DNS

class IdFactory(object):
    """
    This class used to generate a uuid in UUID format
    The uuid will be generated by using uuid.uuid5()
    """
    def __init__(self, userid='', devid='', loc=''):
        super(IdFactory, self).__init__()
        self.userid = userid
        self.devid = unicode(devid, 'utf-8')
        self.loc = unicode(loc, 'utf-8')

    @property
    def uuid(self):
        uuid_string = "%s-%s-%s" % (self.userid, self.devid, self.loc)
        uuid_hex_string = uuid5(NAMESPACE_DNS, str(uuid_string))
        return str(uuid_hex_string)

    @property
    def document_id(self):
        params = [self.userid, self.devid, self.loc]
        to_hash = "##".join(params)
        to_hash = to_hash.encode('utf-8') if isinstance(to_hash, unicode) \
            else to_hash
        return base64.urlsafe_b64encode(hashlib.md5(to_hash).digest())[:-2]

    def info(self):
        info = dict()
        for k, v in self.__dict__.items():
            info[k] = v
        return info


import sys
def main():
    if len(sys.argv) != 4:
        sys.exit(1)
    userid, devid, loc = sys.argv[1:]
    ids = IdFactory(userid, devid, loc)
    print ids.info()
    print ids.uuid
    print ids.documentid


if __name__ == '__main__':
    sys.exit(main())
